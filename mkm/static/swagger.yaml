openapi: 3.0.0
info:
  title: Multi Kernel Manager API
  description: API for managing Jupyter kernels
  version: 1.0.0

servers:
  - url: /

components:
  schemas:
    KernelEnv:
      type: object
      properties:
        name:
          type: string
          description: Name of the environment variable, only extract the prefix of name is "KERNEL_", others are ignored
        value:
          type: string
          description: Value of the environment variable
      required:
        - name
        - value

    VolumeMount:
      type: object
      properties:
        name:
          type: string
          description: Name of the volume mount
        mountPath:
          type: string
          description: Path where the volume should be mounted
      required:
        - name
        - mountPath

    KernelPayload:
      type: object
      properties:
        kernel_id:
          type: string
          description: Unique identifier for the kernel
        kernel_spec_name:
          type: string
          enum: [python]
          description: Name of the kernel specification
        kernel_working_dir:
          type: string
          default: /home/jovyan
          description: Working directory for the kernel
        kernel_namespace:
          type: string
          default: default
          description: Namespace where the kernel should be created
        kernel_envs:
          type: array
          description: Environment variables for the kernel. Only variables with the prefix "KERNEL_" are extracted, others are ignored
          items:
            $ref: '#/components/schemas/KernelEnv'
        kernel_volumes:
          type: array
          items:
            type: object
        kernel_volume_mounts:
          type: array
          items:
            $ref: '#/components/schemas/VolumeMount'
        kernel_idle_timeout:
          type: integer
          default: 3600
          description: Timeout in seconds after which an idle kernel will be culled
        kernel_image:
          type: string
          default: zjuici/tablegpt-kernel:0.1.1
          description: Container image to use for running the kernel
        wait_for_ready:
          type: boolean
          default: true
          description: Whether to wait for the kernel to be ready before returning

    KernelResponse:
      type: object
      properties:
        kernel_id:
          type: string
        kernel_name:
          type: string
        kernel_spec_name:
          type: string
        kernel_namespace:
          type: string
        kernel_working_dir:
          type: string
        kernel_envs:
          type: array
          items:
            $ref: '#/components/schemas/KernelEnv'
        kernel_volumes:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              configMap:
                type: object
                properties:
                  name:
                    type: string
        kernel_volume_mounts:
          type: array
          items:
            $ref: '#/components/schemas/VolumeMount'
        kernel_idle_timeout:
          type: integer
        kernel_image:
          type: string
        ready:
          type: boolean
        kernel_last_activity_time:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        reason:
          type: string
        message:
          type: string

  securitySchemes:
    userHeader:
      type: apiKey
      in: header
      name: X-User
      description: User identification header

security:
  - userHeader: []

paths:
  /api/kernels:
    get:
      summary: List all running kernels
      responses:
        '200':
          description: List of running kernels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KernelResponse'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create a new kernel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KernelPayload'
      responses:
        '200':
          description: Kernel created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KernelResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Unauthorized
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete multiple kernels
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                kernel_ids:
                  type: array
                  items:
                    type: string
              required:
                - kernel_ids
      responses:
        '200':
          description: Kernels deleted successfully
        '400':
          description: Invalid request
        '403':
          description: Unauthorized

  /api/kernels/{kernel_id}:
    parameters:
      - name: kernel_id
        in: path
        required: true
        schema:
          type: string
        description: ID of the kernel
    
    get:
      summary: Get kernel information
      responses:
        '200':
          description: Kernel information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KernelResponse'
        '404':
          description: Kernel not found
        '500':
          description: Server error

    delete:
      summary: Delete a kernel
      responses:
        '200':
          description: Kernel deleted successfully
        '403':
          description: Unauthorized
        '404':
          description: Kernel not found

  /api/kernelspecs:
    get:
      summary: Get available kernel specifications
      responses:
        '200':
          description: List of available kernel specifications
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  enum: [python] 